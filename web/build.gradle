plugins {
	id "groovy"
    id "war"
    id "com.energizedwork.webdriver-binaries" version "1.4"
}

apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'

webdriverBinaries {
    chromedriver "$chromeDriverVersion"
}

gretty {
    contextPath = '/todo'
    // 在 Gretty 中集成功能测试 task
    integrationTestTask = 'functionalTest'
}

dependencies {
	compile project(':repository')
	
	providedCompile "javax.servlet:javax.servlet-api:$servletVersion"
	runtime "javax.servlet:jstl:$jstlVersion"

	testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
	testCompile "junit:junit:$junitVersion"
    testCompile "org.gebish:geb-junit4:$gebVersion"
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion" 
}

sourceSets {
	// 功能测试 source set
    functionalTest {
    	// 功能测试源目录
    	java.srcDir file('src/functTest/java')
        groovy.srcDir file('src/functTest/groovy')
        // 功能测试资源目录
        resources.srcDir file('src/functTest/resources')
        // 指定编译时 classpath，包括产品代码类和所有指派给 testRuntime 配置的依赖
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        // 指定运行时 classpath，包括编译的功能测试类和编译时 classpath
        runtimeClasspath += output + compileClasspath
    }
}

// 用于功能测试的增强 task
task functionalTest(type: Test) {
	description = 'Runs the functional tests.'
    group = 'verification'
    
    // 使用功能测试 source set 来指定测试类的目录，以及执行测试所需的 classpath
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    
    // 指定集成测试报告的输出目录
    reports.html.destination = file("$buildDir/reports/functional")
    
    // 强制性的 Geb 系统属性
    systemProperty "geb.build.reportsDir", reporting.file("geb")
    systemProperty "geb.env", 'chrome'
    
    mustRunAfter test
}

// 使 functionalTest task 作为 check task 的依赖
check.dependsOn functionalTest

